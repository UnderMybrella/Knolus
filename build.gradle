plugins {
    id 'java'
    id 'antlr'
    id 'org.jetbrains.kotlin.jvm' version '1.4-M2'
}

apply plugin: 'maven-publish'

group 'org.abimon'
version '1.1.2'

sourceCompatibility = 8

repositories {
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    maven { url 'https://kotlin.bintray.com/kotlinx' }
    maven { url "https://maven.abimon.org" }
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    antlr "org.antlr:antlr4:4.7.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.7-1.4-M2"

    api 'org.abimon:kornea-annotations:1.3.0'
    api 'org.abimon:kornea-errors:3.3.0'
    api 'org.abimon:kornea-toolkit:1.2.1'

//    implementation "org.abimon:kornea-errors:2.0.2"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    baseName = jar.baseName
    appendix = jar.appendix
    version = jar.version
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    baseName = jar.baseName
    appendix = jar.appendix
    version = jar.version
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    repositories {
        maven {
            // change to point to your repo, e.g. http://my.org/repo
            url = "${rootProject.buildDir}/repo"
        }
    }

    publications {
            maven(MavenPublication) {
//                artifactId = "spiral-$project.name"
                from components.java
                artifact sourcesJar
                artifact javadocJar
            }
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions {
        freeCompilerArgs = ["-Xinline-classes", "-Xopt-in=kotlin.RequiresOptIn"]
    }
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

generateGrammarSource {
    arguments += ['-visitor', '-package', 'org.abimon.antlr.knolus']
    outputDirectory = file("$buildDir/generated-src/antlr/main/org/abimon/antlr/knolus")
}

tasks.compileKotlin.dependsOn(generateGrammarSource)