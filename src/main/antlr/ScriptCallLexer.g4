lexer grammar ScriptCallLexer;
import LibLexer, KnolusModesLexer;

WRAPPED_SCRIPT_CALL: '$(' -> pushMode(ScriptCall);

mode ScriptCall;

SCRIPT_CALL_INTEGER: INTEGER -> type(INTEGER);
SCRIPT_CALL_DECIMAL_NUMBER: DECIMAL_NUMBER -> type(DECIMAL_NUMBER);
SCRIPT_CALL_NULL: NULL -> type(NULL);
SCRIPT_CALL_BEGIN_QUOTED_STRING: '"' -> type(BEGIN_QUOTED_STRING), pushMode(QuotedStringMode);
SCRIPT_CALL_TRUE: TRUE -> type(TRUE);
SCRIPT_CALL_FALSE: FALSE -> type(FALSE);
//SCRIPT_CALL_START_EXPRESSION: '(' -> type(START_EXPRESSION), pushMode(ExpressionMode);

SCRIPT_CALL_IDENTIFIER: IDENTIFIER_START IDENTIFIER_END* -> type(IDENTIFIER);
SCRIPT_CALL_RECURSIVE: '$(' -> type(WRAPPED_SCRIPT_CALL);

SCRIPT_CALL_PARAM_SEPARATOR: INLINE_WHITESPACE_CHARACTERS+;
SCRIPT_CALL_FLAG: '--';
SCRIPT_CALL_FLAG_GROUP: '-';

END_SCRIPT_CALL: ')' -> popMode;